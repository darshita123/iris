# test.yml
name: Test Iris Model

on:
  workflow_run:
    workflows: ["Train Iris Model"]
    branches:
      - main
    types:
      - completed

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the trained model artifact from the previous pipeline
      - name: Get Previous Workflow Run ID
        run: |
          previous_run_id=$(curl -s https://api.github.com/repos/darshita123/iris/actions/workflows/<previous_workflow_name>/runs?per_page=1 | jq -r '.workflows[0].runs[0].id')
     - name: Download Artifacts
        run: |
          artifacts_url="https://api.github.com/repos/darshita123/iris/actions/runs/${previous_run_id}/artifacts"
          artifacts_data=$(curl -s "${artifacts_url}")
          artifacts_json=$(echo "${artifacts_data}" | jq -r '.')
          for artifact in "${artifacts_json}"; do
            artifact_name="${artifact.name}"
            artifact_download_url="${artifact.archive_download_url}"
            curl -o "${artifact_name}.zip" "${artifact_d
ownload_url}"
          done
      # - name: Download model artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: iris-model
      #     run-id: ${{ github.run_id }}
      # - name: Display structure of downloaded files
      #   run: ls -R

      # Add the testing data file
      - name: Add test data
        run: |
          echo '{ "data": [[5.1, 3.5, 1.4, 0.2], [6.2, 3.4, 5.4, 2.3], [5.9, 3.0, 5.1, 1.8]], "expected": [0, 2, 2] }' > data.json

      # Setup Python 3.10
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run test script
      - name: Run tests
        run: python test.py
